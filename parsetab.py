
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programrightORrightANDrightNOTrightPLUSMINUSrightTIMESDIVIDEnonassocMODrightUMINUSAND ASSIGN BEGIN COLON COMMA DIVIDE DO ELSE END EQUAL FALSE ID IF INT INTEGER LESS LESSEQ LPAREN MINUS MOD MORE MOREEQ NOT NOTEQ OR PLUS PRINT PROGRAM RPAREN SEM THEN TIMES TRUE UMINUS VAR WHILEmarker : N : expression : INTEGERexpression : IDexpression : expression PLUS expressionexpression : expression MINUS expressionexpression : expression TIMES expressionexpression : expression DIVIDE expressionexpression : expression MOD expressionexpression : MINUS expression %prec UMINUSexpression : expression LESS expression\n                | expression EQUAL expression\n                | expression MORE expression\n                | expression NOTEQ expression\n                | expression LESSEQ expression\n                | expression MOREEQ expressionexpression : expression OR marker expressionexpression : expression AND marker expressionexpression : NOT expressionexpression : LPAREN expression RPARENstatement : ID ASSIGN expressionstatement : IF expression THEN marker statementstatement : IF expression THEN marker statement N ELSE marker statementstatement : WHILE marker expression DO marker statementstatement : compoundStatementstatement : PRINT LPAREN expression RPARENstatementList : statementList SEM marker statementstatementList : statementcompoundStatement : BEGIN statementList ENDtype : INTidList : IDidList : idList COMMA IDdeclarationList : idList COLON typedeclarationList : declarationList SEM idList COLON typedeclarations : VAR declarationListdeclarations : program : PROGRAM ID declarations compoundStatement'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,6,21,],[0,-37,-29,]),'ID':([2,5,7,14,15,18,20,22,23,27,28,29,30,31,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,59,71,72,74,80,83,84,],[3,10,13,26,-1,10,35,-1,26,26,26,26,26,26,13,-1,26,26,26,26,26,26,26,26,26,26,26,-1,-1,13,26,26,-1,13,-1,13,]),'VAR':([3,],[5,]),'BEGIN':([3,4,7,8,22,33,34,36,38,59,74,76,80,83,84,],[-36,7,7,-35,-1,-33,-30,7,-1,7,-1,-34,7,-1,7,]),'IF':([7,22,36,38,59,74,80,83,84,],[14,-1,14,-1,14,-1,14,-1,14,]),'WHILE':([7,22,36,38,59,74,80,83,84,],[15,-1,15,-1,15,-1,15,-1,15,]),'PRINT':([7,22,36,38,59,74,80,83,84,],[17,-1,17,-1,17,-1,17,-1,17,]),'SEM':([8,11,12,16,21,25,26,33,34,37,52,53,58,60,61,62,63,64,65,66,67,68,69,70,73,75,76,77,78,79,82,85,],[18,22,-28,-25,-29,-3,-4,-33,-30,-21,-10,-19,-27,-5,-6,-7,-8,-9,-11,-12,-13,-14,-15,-16,-20,-26,-34,-22,-17,-18,-24,-23,]),'COLON':([9,10,32,35,],[19,-31,57,-32,]),'COMMA':([9,10,32,35,],[20,-31,20,-32,]),'END':([11,12,16,21,25,26,37,52,53,58,60,61,62,63,64,65,66,67,68,69,70,73,75,77,78,79,82,85,],[21,-28,-25,-29,-3,-4,-21,-10,-19,-27,-5,-6,-7,-8,-9,-11,-12,-13,-14,-15,-16,-20,-26,-22,-17,-18,-24,-23,]),'ASSIGN':([13,],[23,]),'INTEGER':([14,15,23,27,28,29,30,31,39,40,41,42,43,44,45,46,47,48,49,50,51,71,72,],[25,-1,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-1,-1,25,25,]),'MINUS':([14,15,23,24,25,26,27,28,29,30,31,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,78,79,],[27,-1,27,40,-3,-4,27,27,27,27,27,40,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-10,40,40,40,40,40,40,-7,-8,-9,40,40,40,40,40,40,27,27,-20,40,40,]),'NOT':([14,15,23,27,28,29,30,31,39,40,41,42,43,44,45,46,47,48,49,50,51,71,72,],[28,-1,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-1,-1,28,28,]),'LPAREN':([14,15,17,23,27,28,29,30,31,39,40,41,42,43,44,45,46,47,48,49,50,51,71,72,],[29,-1,31,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-1,-1,29,29,]),'ELSE':([16,21,25,26,37,52,53,60,61,62,63,64,65,66,67,68,69,70,73,75,77,78,79,81,82,85,],[-25,-29,-3,-4,-21,-10,-19,-5,-6,-7,-8,-9,-11,-12,-13,-14,-15,-16,-20,-26,-2,-17,-18,83,-24,-23,]),'INT':([19,57,],[34,34,]),'THEN':([24,25,26,52,53,60,61,62,63,64,65,66,67,68,69,70,73,78,79,],[38,-3,-4,-10,-19,-5,-6,-7,-8,-9,-11,-12,-13,-14,-15,-16,-20,-17,-18,]),'PLUS':([24,25,26,37,52,53,54,55,56,60,61,62,63,64,65,66,67,68,69,70,73,78,79,],[39,-3,-4,39,-10,39,39,39,39,39,39,-7,-8,-9,39,39,39,39,39,39,-20,39,39,]),'TIMES':([24,25,26,37,52,53,54,55,56,60,61,62,63,64,65,66,67,68,69,70,73,78,79,],[41,-3,-4,41,-10,41,41,41,41,41,41,41,41,-9,41,41,41,41,41,41,-20,41,41,]),'DIVIDE':([24,25,26,37,52,53,54,55,56,60,61,62,63,64,65,66,67,68,69,70,73,78,79,],[42,-3,-4,42,-10,42,42,42,42,42,42,42,42,-9,42,42,42,42,42,42,-20,42,42,]),'MOD':([24,25,26,37,52,53,54,55,56,60,61,62,63,64,65,66,67,68,69,70,73,78,79,],[43,-3,-4,43,-10,43,43,43,43,43,43,43,43,None,43,43,43,43,43,43,-20,43,43,]),'LESS':([24,25,26,37,52,53,54,55,56,60,61,62,63,64,65,66,67,68,69,70,73,78,79,],[44,-3,-4,44,-10,-19,44,44,44,-5,-6,-7,-8,-9,44,44,44,44,44,44,-20,-17,-18,]),'EQUAL':([24,25,26,37,52,53,54,55,56,60,61,62,63,64,65,66,67,68,69,70,73,78,79,],[45,-3,-4,45,-10,-19,45,45,45,-5,-6,-7,-8,-9,45,45,45,45,45,45,-20,-17,-18,]),'MORE':([24,25,26,37,52,53,54,55,56,60,61,62,63,64,65,66,67,68,69,70,73,78,79,],[46,-3,-4,46,-10,-19,46,46,46,-5,-6,-7,-8,-9,46,46,46,46,46,46,-20,-17,-18,]),'NOTEQ':([24,25,26,37,52,53,54,55,56,60,61,62,63,64,65,66,67,68,69,70,73,78,79,],[47,-3,-4,47,-10,-19,47,47,47,-5,-6,-7,-8,-9,47,47,47,47,47,47,-20,-17,-18,]),'LESSEQ':([24,25,26,37,52,53,54,55,56,60,61,62,63,64,65,66,67,68,69,70,73,78,79,],[48,-3,-4,48,-10,-19,48,48,48,-5,-6,-7,-8,-9,48,48,48,48,48,48,-20,-17,-18,]),'MOREEQ':([24,25,26,37,52,53,54,55,56,60,61,62,63,64,65,66,67,68,69,70,73,78,79,],[49,-3,-4,49,-10,-19,49,49,49,-5,-6,-7,-8,-9,49,49,49,49,49,49,-20,-17,-18,]),'OR':([24,25,26,37,52,53,54,55,56,60,61,62,63,64,65,66,67,68,69,70,73,78,79,],[50,-3,-4,50,-10,-19,50,50,50,-5,-6,-7,-8,-9,50,50,50,50,50,50,-20,50,-18,]),'AND':([24,25,26,37,52,53,54,55,56,60,61,62,63,64,65,66,67,68,69,70,73,78,79,],[51,-3,-4,51,-10,-19,51,51,51,-5,-6,-7,-8,-9,51,51,51,51,51,51,-20,51,51,]),'RPAREN':([25,26,52,53,54,56,60,61,62,63,64,65,66,67,68,69,70,73,78,79,],[-3,-4,-10,-19,73,75,-5,-6,-7,-8,-9,-11,-12,-13,-14,-15,-16,-20,-17,-18,]),'DO':([25,26,52,53,55,60,61,62,63,64,65,66,67,68,69,70,73,78,79,],[-3,-4,-10,-19,74,-5,-6,-7,-8,-9,-11,-12,-13,-14,-15,-16,-20,-17,-18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declarations':([3,],[4,]),'compoundStatement':([4,7,36,59,80,84,],[6,16,16,16,16,16,]),'declarationList':([5,],[8,]),'idList':([5,18,],[9,32,]),'statementList':([7,],[11,]),'statement':([7,36,59,80,84,],[12,58,77,82,85,]),'expression':([14,23,27,28,29,30,31,39,40,41,42,43,44,45,46,47,48,49,71,72,],[24,37,52,53,54,55,56,60,61,62,63,64,65,66,67,68,69,70,78,79,]),'marker':([15,22,38,50,51,74,83,],[30,36,59,71,72,80,84,]),'type':([19,57,],[33,76,]),'N':([77,],[81,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('marker -> <empty>','marker',0,'p_marker','myparser.py',124),
  ('N -> <empty>','N',0,'p_N','myparser.py',135),
  ('expression -> INTEGER','expression',1,'p_expression_integer','myparser.py',181),
  ('expression -> ID','expression',1,'p_expression_id','myparser.py',187),
  ('expression -> expression PLUS expression','expression',3,'p_expression_plus','myparser.py',194),
  ('expression -> expression MINUS expression','expression',3,'p_expression_minus','myparser.py',202),
  ('expression -> expression TIMES expression','expression',3,'p_expression_times','myparser.py',210),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_div','myparser.py',218),
  ('expression -> expression MOD expression','expression',3,'p_expression_mod','myparser.py',226),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','myparser.py',234),
  ('expression -> expression LESS expression','expression',3,'p_expression_relop','myparser.py',240),
  ('expression -> expression EQUAL expression','expression',3,'p_expression_relop','myparser.py',241),
  ('expression -> expression MORE expression','expression',3,'p_expression_relop','myparser.py',242),
  ('expression -> expression NOTEQ expression','expression',3,'p_expression_relop','myparser.py',243),
  ('expression -> expression LESSEQ expression','expression',3,'p_expression_relop','myparser.py',244),
  ('expression -> expression MOREEQ expression','expression',3,'p_expression_relop','myparser.py',245),
  ('expression -> expression OR marker expression','expression',4,'p_expression_or','myparser.py',254),
  ('expression -> expression AND marker expression','expression',4,'p_expression_and','myparser.py',262),
  ('expression -> NOT expression','expression',2,'p_expression_unot','myparser.py',270),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','myparser.py',275),
  ('statement -> ID ASSIGN expression','statement',3,'p_statement_assign','myparser.py',293),
  ('statement -> IF expression THEN marker statement','statement',5,'p_statement_ifthen','myparser.py',299),
  ('statement -> IF expression THEN marker statement N ELSE marker statement','statement',9,'p_statement_ifthenelse','myparser.py',309),
  ('statement -> WHILE marker expression DO marker statement','statement',6,'p_statement_while','myparser.py',318),
  ('statement -> compoundStatement','statement',1,'p_statement_compound','myparser.py',327),
  ('statement -> PRINT LPAREN expression RPAREN','statement',4,'p_statement_print','myparser.py',333),
  ('statementList -> statementList SEM marker statement','statementList',4,'p_statementList_stmliststm','myparser.py',344),
  ('statementList -> statement','statementList',1,'p_statementList_stm','myparser.py',351),
  ('compoundStatement -> BEGIN statementList END','compoundStatement',3,'p_compoundStatement_beginend','myparser.py',362),
  ('type -> INT','type',1,'p_type_int','myparser.py',371),
  ('idList -> ID','idList',1,'p_idList_id','myparser.py',376),
  ('idList -> idList COMMA ID','idList',3,'p_idList_idid','myparser.py',381),
  ('declarationList -> idList COLON type','declarationList',3,'p_declarationList_idList_type','myparser.py',386),
  ('declarationList -> declarationList SEM idList COLON type','declarationList',5,'p_declarationList_decidtype','myparser.py',396),
  ('declarations -> VAR declarationList','declarations',2,'p_declarations_var','myparser.py',406),
  ('declarations -> <empty>','declarations',0,'p_declarations_empty','myparser.py',411),
  ('program -> PROGRAM ID declarations compoundStatement','program',4,'p_program','myparser.py',416),
]
